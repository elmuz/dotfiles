# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

font pango:Fira Sans 10

include $XDG_CONFIG_HOME/sway/config.d/colors.conf

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# exec way-displays > /tmp/way-displays.${XDG_VTNR}.${USER}.log 2>&1
include $XDG_CONFIG_HOME/sway/config.d/screen.conf

### Idle configuration
# exec swayidle -w \
#     timeout 300 'swaylock -f -c 000000' \
#     timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#     before-sleep 'swaylock -f'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

bindsym $mod+l exec "swaylock -f"

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "12815:20499:SONiX_USB_DEVICE" {
    xkb_layout "wasd"
    xkb_variant "altgr-intl-wasd"
    xkb_options shift:both_capslock,caps:super
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
}

### Options
focus_follows_mouse no
mouse_warping none

### Appearance
client.focused $nord10ff $nord10ff $nord4ff $nord9ff
client.unfocused $nord3ff $nord3ff $nord4ff
client.focused_inactive $nord3ff $nord3ff $nord4ff

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Load laptop-mode config file
    bindsym $mod+Shift+bracketleft exec "rm -f $XDG_CONFIG_HOME/sway/config.d/screen.conf && ln -s $XDG_CONFIG_HOME/sway/config.d/single-screen.conf $XDG_CONFIG_HOME/sway/config.d/screen.conf"; reload

    # Load extended display config file
    bindsym $mod+Shift+bracketright exec "rm -f $XDG_CONFIG_HOME/sway/config.d/screen.conf && ln -s $XDG_CONFIG_HOME/sway/config.d/double-screen.conf $XDG_CONFIG_HOME/sway/config.d/screen.conf"; reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+k exec swaymsg exit

    # Power menu
    bindsym $mod+Escape exec $XDG_CONFIG_HOME/fuzzel/powermenu.sh

# Moving around:
#
    # Use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

### Workspaces
#
# Workspace vars:
set $wp1 ""
set $wp2 ""
set $wp3 ""
set $wp4 "4"
set $wp5 ""
set $wp6 "6"
set $wp7 "7"
set $wp8 ""
set $wp9 "󰋋"
set $wp10 "10"

workspace $wp1 output $CENTER
workspace $wp2 output $CENTER
workspace $wp3 output $CENTER
workspace $wp8 output $RIGHT
workspace $wp9 output $RIGHT

# Windows titlebars and borders
default_border pixel 3
#default_floating_border none

# Gaps
gaps inner 12

# Switch to workspace
bindsym $mod+1 workspace $wp1
bindsym $mod+2 workspace $wp2
bindsym $mod+3 workspace $wp3
bindsym $mod+4 workspace $wp4
bindsym $mod+5 workspace $wp5
bindsym $mod+6 workspace $wp6
bindsym $mod+7 workspace $wp7
bindsym $mod+8 workspace $wp8
bindsym $mod+9 workspace $wp9
bindsym $mod+0 workspace $wp10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $wp1
bindsym $mod+Shift+2 move container to workspace $wp2
bindsym $mod+Shift+3 move container to workspace $wp3
bindsym $mod+Shift+4 move container to workspace $wp4
bindsym $mod+Shift+5 move container to workspace $wp5
bindsym $mod+Shift+6 move container to workspace $wp6
bindsym $mod+Shift+7 move container to workspace $wp7
bindsym $mod+Shift+8 move container to workspace $wp8
bindsym $mod+Shift+9 move container to workspace $wp9
bindsym $mod+Shift+0 move container to workspace $wp10

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h split h
    bindsym $mod+v split v

    # Switch the current container between different layout styles
    # bindsym $mod+q layout stacking
    # bindsym $mod+w layout tabbed
    # bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+Return floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+s move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+s scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt


    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Assign applications to specific workspaces
assign [app_id="firefox"] → $wp1
assign [class="jetbrains-pycharm"] → $wp3
assign [app_id="gimp"] → $wp5
assign [class="Slack"] → $wp8
assign [app_id="zoom"] → $wp9

#
# Status Bar:
#
# window colors
##                        border              background         text                  indicator
# client.focused          $bg-color           $bg-color          $text-color           $bg-color
# client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color  $bg-color
# client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color  $bg-color
# client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color           $bg-color

# Xwayland
# xwayland disable

########### Application-specific mods #############
# Force some windows to be in floating mode
for_window [title="About Mozilla Firefox"] floating enable

# This avoids PyCharm tooltip messages to gain focus
# no_focus [app_id="jetbrains-pycharm"]

# At startup open Pavucontrol to scratchpad
for_window [app_id="pavucontrol"] move window to scratchpad, resize set 960 480
exec pavucontrol

# Map Qalculate shortcut
for_window [app_id="qalculate-gtk"] floating enable
bindsym $mod+c exec qalculate-gtk

for_window [app_id="wdisplays"] floating enable, resize set 960 480
for_window [app_id="blueberry.py"] floating enable, resize set 480 640

#######################################################

# Add bar
bar {
  swaybar_command waybar
  workspace_buttons yes
}

# Apply redshift
exec gammastep -m wayland

# Screenshot
bindsym $mod+Shift+p exec grim -t png -g "$(slurp)" - | wl-copy
bindsym $mod+p exec "grim -t png $XDG_PICTURES_DIR/Screenshots/$(date +%s.png)"

# Multimedia / Special keybindings
bindsym XF86AudioRaiseVolume exec "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+"
bindsym XF86AudioLowerVolume exec "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-"
bindsym XF86AudioMute exec "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
bindsym XF86MonBrightnessUp exec "xbacklight -inc 10"
bindsym XF86MonBrightnessDown exec "xbacklight -dec 10"

# This line avoids delay for GTK+ apps (e.g Firefox)
exec systemctl --user import-environment DISPLAY \
                                         SWAYSOCK \
                                         WAYLAND_DISPLAY \
                                         XDG_CURRENT_DESKTOP

# Appearance. The best way to apply a GTK theme is to pass via `gsettings`.
# This script parses the configuration files and applies theme/font/cursor/icon.
exec_always import-gsettings.sh
